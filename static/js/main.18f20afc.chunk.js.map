{"version":3,"sources":["todoitems.js","filters.js","App.js","index.js"],"names":["TodoItems","_this","this","ids","Object","keys","objectSpread","props","textLines","filter","key","toConsumableArray","map","textLine","react_default","a","createElement","className","id","type","checked","onClick","toggleIsComplete","onChange","completingItems","removeTask","React","Component","Filters","isSelect","name","setFilter","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","completedItems","leftIems","state","length","addTask","event","task","target","value","tmp","displayStyle","display","changeDisplay","isView","newDisplay","isComplete","newFilter","clearComplete","hello","bye","another task","last task","_this2","placeholder","autoFocus","autoComplete","onKeyPress","style","htmlFor","todoitems","filters","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.18f20afc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n  render() {\r\n    const ids = Object.keys({ ...this.props.textLines });\r\n    const filtredTasks =\r\n      this.props.filter === \"completed\"\r\n        ? ids.filter(key => this.props.textLines[key])\r\n        : this.props.filter === \"active\"\r\n        ? ids.filter(key => !this.props.textLines[key])\r\n        : [...ids];\r\n\r\n    return filtredTasks.map(textLine => (\r\n      <li className=\"\" id={textLine}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={this.props.textLines[textLine]}\r\n            onClick={() => this.props.toggleIsComplete(textLine)}\r\n            onChange={() => this.props.completingItems()}\r\n          />\r\n          <label>{textLine}</label>\r\n\r\n          <button\r\n            className=\"destroy\"\r\n            onClick={() => this.props.removeTask(textLine)}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n  render() {\r\n    return this.props.isSelect.map(filter => (\r\n      <li>\r\n        <label className=\"radio\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filters\"\r\n            checked={filter === this.props.filter}\r\n            onChange={() => {\r\n              this.props.setFilter(filter);\r\n            }}\r\n          />\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </label>\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoItems from \"./todoitems\";\nimport Filters from \"./filters\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textLines: {\n        hello: false,\n        bye: false,\n        \"another task\": false,\n        \"last task\": false\n      },\n      completedItems: 0,\n      filter: null,\n      displayStyle: { display: \"block\" },\n      isSelect: [\"all\", \"active\", \"completed\"]\n    };\n  }\n\n  completingItems = () => {\n    this.setState(prevState => {\n      return { completedItems: prevState.completedItems + 1 };\n    });\n  };\n\n  leftIems = () => {\n    return Object.keys(this.state.textLines).length - this.state.completedItems;\n  };\n\n  addTask = event => {\n    if (event.key === \"Enter\") {\n      let task = event.target.value;\n      event.target.value = \"\";\n      this.setState(prevState => {\n        const tmp = { ...prevState.textLines };\n        tmp[task] = false;\n        return { textLines: tmp, displayStyle: { display: \"block\" } };\n      });\n    }\n  };\n\n  changeDisplay = isView => {\n    const newDisplay = isView ? { display: \"none\" } : { display: \"block\" };\n    this.setState({ displayStyle: newDisplay });\n  };\n\n  removeTask = key => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      delete tmp[key];\n      return { textLines: tmp };\n    });\n  };\n\n  isComplete = key => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      tmp[key] = !prevState.textLines[key];\n      return { textLines: tmp };\n    });\n  };\n\n  setFilter = newFilter => {\n    this.setState({\n      filter: newFilter\n    });\n  };\n\n  clearComplete = () => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      for (let key in tmp) {\n        if (tmp[key]) {\n          delete tmp[key];\n        }\n      }\n      return { textLines: tmp, completedItems: 0 };\n    });\n  };\n\n  render() {\n    if (this.state.displayStyle.display === \"block\") {\n      if (Object.keys(this.state.textLines).length === 0) {\n        this.setState({ displayStyle: { display: \"none\" } });\n      }\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus=\"\"\n            autoComplete=\"off\"\n            onKeyPress={this.addTask}\n          />\n        </header>\n        <section className=\"main\" style={this.state.displayStyle}>\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            <TodoItems\n              textLines={this.state.textLines}\n              toggleIsComplete={this.isComplete}\n              removeTask={this.removeTask}\n              filter={this.state.filter}\n              completingItems={this.completingItems}\n            />\n          </ul>\n        </section>\n        <footer className=\"footer\" style={this.state.displayStyle}>\n          <span className=\"todo-count\">\n            <strong>{this.leftIems()}</strong> items left\n          </span>\n          <ul className=\"filters\">\n            <Filters\n              isSelect={this.state.isSelect}\n              setFilter={this.setFilter}\n              filter={this.state.filter}\n            />\n          </ul>\n          <button\n            className=\"clear-completed\"\n            style={this.state.displayStyle}\n            onClick={() => {\n              this.clearComplete();\n            }}\n          >\n            clear-completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\n"],"sourceRoot":""}