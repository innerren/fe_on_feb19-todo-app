{"version":3,"sources":["TodoItems.js","Filters.js","App.js","index.js"],"names":["TodoItems","list","tasks","map","item","react_default","a","createElement","className","key","id","type","checked","completed","onChange","_this","props","toggleIsComplete","onClick","title","removeTask","filtr","this","filter","items","filtredTasks","Object","toConsumableArray","React","Component","Filters","filters","name","setFilter","isSelect","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","completedItems","state","length","leftIems","addTask","event","refs","textInput","value","preventDefault","setState","prevState","concat","isComplete","tmp","objectSpread","newFilter","clearComplete","displayStyle","display","_this2","onSubmit","placeholder","autoFocus","autoComplete","ref","style","htmlFor","src_TodoItems","completingItems","src_Filters","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1c011e2f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n  list = tasks => {\r\n    return tasks.map(item => (\r\n      <li className=\"\" key={item.id}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={item.completed}\r\n            onChange={() => this.props.toggleIsComplete(item.id)}\r\n          />\r\n          <label onClick={() => this.props.toggleIsComplete(item.id)}>\r\n            {item.title}\r\n          </label>\r\n\r\n          <button\r\n            className=\"destroy\"\r\n            onClick={() => this.props.removeTask(item.id)}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const filtr = this.props.filter;\r\n    const items = this.props.items;\r\n    const filtredTasks\r\n      = filtr === \"completed\"\r\n        ? items.filter(item => item.completed)\r\n        : filtr === \"active\"\r\n        ? items.filter(item => !item.completed)\r\n        : [...items];\r\n\r\n    return <ul className=\"todo-list\">{this.list(filtredTasks)}</ul>;\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n  list = filters => {\r\n    return filters.map((filter, id) => (\r\n      <li key={id}>\r\n        <label className=\"radio\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filters\"\r\n            checked={filter === this.props.filter}\r\n            onChange={() => {\r\n              this.props.setFilter(filter);\r\n            }}\r\n          />\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </label>\r\n      </li>\r\n    ));\r\n  };\r\n  render() {\r\n    const isSelect = this.props.isSelect;\r\n    return <ul className=\"filters\">{this.list(isSelect)}</ul>;\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoItems from \"./TodoItems\";\nimport Filters from \"./Filters\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // members of item structure\n      // item: {\n      //   id: 0,\n      //   title: \"\",\n      //   completed: false,\n      // }\n      items: [],\n\n      filter: null,\n      displayStyle: { display: \"block\" },\n      isSelect: [\"all\", \"active\", \"completed\"],\n    };\n  }\n\n  completedItems = () => {\n    return this.state.items.filter(item => item.completed).length;\n  };\n\n  leftIems = () => {\n    return this.state.items.length - this.completedItems();\n  };\n\n  addTask = event => {\n    const item = {};\n    item.title = this.refs.textInput.value;\n    event.preventDefault();\n    item.completed = false;\n    this.refs.textInput.value = \"\";\n    this.setState(prevState => {\n      item.id\n        = prevState.items.length === 0\n          ? 0\n          : prevState.items[prevState.items.length - 1].id + 1;\n      return { items: [...prevState.items, item] };\n    });\n  };\n\n  removeTask = id => {\n    this.setState(prevState => {\n      return { items: prevState.items.filter(item => item.id !== id) };\n    });\n  };\n\n  isComplete = id => {\n    this.setState(prevState => {\n      return {\n        items: prevState.items.map(item => {\n          if (item.id === id) {\n            const tmp = { ...item };\n            tmp.completed = !item.completed;\n            return tmp;\n          }\n          return item;\n        }),\n      };\n    });\n  };\n\n  setFilter = newFilter => {\n    this.setState({\n      filter: newFilter,\n    });\n  };\n\n  clearComplete = () => {\n    this.setState(prevState => {\n      return { items: prevState.items.filter(item => !item.completed) };\n    });\n  };\n\n  render() {\n    this.setState(prevState => {\n      if (\n        prevState.items.length === 0\n        && prevState.displayStyle.display === \"block\"\n      ) {\n        return { displayStyle: { display: \"none\" } };\n      } else if (\n        prevState.items.length !== 0\n        && prevState.displayStyle.display === \"none\"\n      ) {\n        return { displayStyle: { display: \"block\" } };\n      }\n    });\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n          <form onSubmit={this.addTask}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              autoFocus=\"\"\n              autoComplete=\"off\"\n              type=\"text\"\n              ref=\"textInput\"\n            />\n          </form>\n        </header>\n        <section className=\"main\" style={this.state.displayStyle}>\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoItems\n            items={this.state.items}\n            toggleIsComplete={this.isComplete}\n            removeTask={this.removeTask}\n            filter={this.state.filter}\n            completingItems={this.completingItems}\n          />\n        </section>\n        <footer className=\"footer\" style={this.state.displayStyle}>\n          <span className=\"todo-count\">\n            <strong>{this.leftIems()}</strong> items left\n          </span>\n\n          <Filters\n            isSelect={this.state.isSelect}\n            setFilter={this.setFilter}\n            filter={this.state.filter}\n          />\n\n          <button\n            className=\"clear-completed\"\n            style={this.state.displayStyle}\n            onClick={() => {\n              this.clearComplete();\n            }}\n          >\n            clear-completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\n"],"sourceRoot":""}