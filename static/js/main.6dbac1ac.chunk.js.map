{"version":3,"sources":["TodoItems.js","Filters.js","Footer.js","Header.js","App.js","index.js"],"names":["TodoItems","list","tasks","map","item","index","react_default","a","createElement","className","key","id","type","checked","completed","onChange","_this","props","toggleIsComplete","tabIndex","contentEditable","editable","onDoubleClick","e","setEditable","target","focus","onBlur","escapeEdit","title","onKeyDown","editTask","onClick","removeTask","filtr","this","filter","items","filtredTasks","React","Component","Filters","filters","name","setFilter","isSelect","Footer","_ref","leftIems","clearComplete","src_Filters","Header","state","value","handleChange","setState","_this2","addTask","onSubmit","placeholder","autoFocus","autoComplete","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","completedItems","length","preventDefault","prevState","concat","toConsumableArray","displayed","objectSpread","innerText","keyCode","newTitle","tmp","isComplete","newFilter","src_Header","style","displayStyle","htmlFor","src_TodoItems","completingItems","src_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6dbac1ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n  list = tasks => {\r\n    return tasks.map((item, index) => (\r\n      <li className=\"\" key={item.id}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={item.completed}\r\n            onChange={() => this.props.toggleIsComplete(item.id)}\r\n          />\r\n          <label\r\n            tabIndex={index}\r\n            contentEditable={item.editable}\r\n            onDoubleClick={e => {\r\n              this.props.setEditable(item.id);\r\n              e.target.focus();\r\n            }}\r\n            onBlur={e => {\r\n              this.props.escapeEdit(e, item.title);\r\n            }}\r\n            onKeyDown={e => this.props.editTask(e, item.id, item.title)}\r\n          >\r\n            {item.title}\r\n          </label>\r\n\r\n          <button\r\n            className=\"destroy\"\r\n            onClick={() => this.props.removeTask(item.id)}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const filtr = this.props.filter;\r\n    const items = this.props.items;\r\n    const filtredTasks\r\n      = filtr === \"completed\"\r\n        ? items.filter(item => item.completed)\r\n        : filtr === \"active\"\r\n        ? items.filter(item => !item.completed)\r\n        : items;\r\n\r\n    return <ul className=\"todo-list\">{this.list(filtredTasks)}</ul>;\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n  list = filters => {\r\n    return filters.map((filter, id) => (\r\n      <li key={id}>\r\n        <label className=\"radio\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filters\"\r\n            checked={filter === this.props.filter}\r\n            onChange={() => {\r\n              this.props.setFilter(filter);\r\n            }}\r\n          />\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </label>\r\n      </li>\r\n    ));\r\n  };\r\n  render() {\r\n    const isSelect = this.props.isSelect;\r\n    return <ul className=\"filters\">{this.list(isSelect)}</ul>;\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\n\r\nconst Footer = ({ leftIems, setFilter, clearComplete, filter, filters }) => (\r\n  <footer className=\"footer\">\r\n    <span className=\"todo-count\">\r\n      <strong>{leftIems()}</strong> items left\r\n    </span>\r\n\r\n    <Filters isSelect={filters} setFilter={setFilter} filter={filter} />\r\n\r\n    <button className=\"clear-completed\" onClick={clearComplete}>\r\n      clear-completed\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const addTask = this.props.addTask;\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos App</h1>\r\n        <form\r\n          onSubmit={e => {\r\n            addTask(e, this.state.value);\r\n            this.setState({ value: \"\" });\r\n          }}\r\n        >\r\n          <input\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus={true}\r\n            value={this.state.value}\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport TodoItems from \"./TodoItems\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [],\r\n      filter: null,\r\n      displayed: false,\r\n      filters: [\"all\", \"active\", \"completed\"],\r\n    };\r\n  }\r\n\r\n  completedItems = () => {\r\n    return this.state.items.filter(item => item.completed).length;\r\n  };\r\n\r\n  leftIems = () => {\r\n    return this.state.items.length - this.completedItems();\r\n  };\r\n\r\n  addTask = (e, value) => {\r\n    const item = {};\r\n    item.title = value;\r\n    e.preventDefault();\r\n    item.completed = false;\r\n    item.editable = false;\r\n\r\n    this.setState(prevState => {\r\n      item.id\r\n        = prevState.items.length === 0\r\n          ? 0\r\n          : prevState.items[prevState.items.length - 1].id + 1;\r\n      return { items: [...prevState.items, item], displayed: true };\r\n    });\r\n  };\r\n\r\n  setEditable = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.map(item =>\r\n          item.id === id ? { ...item, editable: true } : item\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  escapeEdit = (e, title, id) => {\r\n    e.target.innerText = title;\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.map(item =>\r\n          item.id === id ? { ...item, editable: false } : item\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  editTask = (e, id, title) => {\r\n    if (e.keyCode === 13) {\r\n      const newTitle = e.target.innerText;\r\n      this.setState(prevState => {\r\n        return {\r\n          items: prevState.items.map(item =>\r\n            item.id === id\r\n              ? { ...item, title: newTitle, editable: false }\r\n              : item\r\n          ),\r\n        };\r\n      });\r\n    }\r\n    if (e.keyCode === 27) {\r\n      this.escapeEdit(e, title, id);\r\n    }\r\n  };\r\n\r\n  removeTask = id => {\r\n    this.setState(prevState => {\r\n      const tmp = prevState.items.filter(item => item.id !== id);\r\n\r\n      return { items: tmp, displayed: !(tmp.length === 0) };\r\n    });\r\n  };\r\n\r\n  isComplete = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.map(item =>\r\n          item.id === id ? { ...item, completed: !item.completed } : item\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  setFilter = newFilter => {\r\n    this.setState({\r\n      filter: newFilter,\r\n    });\r\n  };\r\n\r\n  clearComplete = () => {\r\n    this.setState(prevState => {\r\n      return { items: prevState.items.filter(item => !item.completed) };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <Header addTask={this.addTask} />\r\n        <section className=\"main\" style={this.state.displayStyle}>\r\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <TodoItems\r\n            items={this.state.items}\r\n            toggleIsComplete={this.isComplete}\r\n            removeTask={this.removeTask}\r\n            filter={this.state.filter}\r\n            completingItems={this.completingItems}\r\n            editTask={this.editTask}\r\n            escapeEdit={this.escapeEdit}\r\n            setEditable={this.setEditable}\r\n          />\r\n        </section>\r\n        {this.state.displayed ? (\r\n          <Footer\r\n            leftIems={this.leftIems}\r\n            setFilter={this.setFilter}\r\n            clearComplete={this.clearComplete}\r\n            filters={this.state.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        ) : null}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}