{"version":3,"sources":["TodoItems.js","Filters.js","App.js","index.js"],"names":["TodoItems","list","tasks","map","item","index","react_default","a","createElement","className","key","id","type","checked","completed","onChange","_this","props","toggleIsComplete","tabIndex","contentEditable","onDoubleClick","e","target","focus","onBlur","escapeEdit","title","onKeyDown","editTask","onClick","removeTask","filtr","this","filter","items","filtredTasks","Object","toConsumableArray","React","Component","Filters","filters","name","setFilter","isSelect","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","completedItems","state","length","leftIems","addTask","refs","textInput","value","preventDefault","setState","prevState","concat","innerText","keyCode","newTitle","tmp","objectSpread","isComplete","newFilter","clearComplete","displayStyle","display","_this2","onSubmit","placeholder","autoFocus","autoComplete","ref","style","htmlFor","src_TodoItems","completingItems","src_Filters","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ddca9339.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n  list = tasks => {\r\n    return tasks.map((item, index) => (\r\n      <li className=\"\" key={item.id}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={item.completed}\r\n            onChange={() => this.props.toggleIsComplete(item.id)}\r\n          />\r\n          <label\r\n            tabIndex={index}\r\n            contentEditable={false}\r\n            onDoubleClick={e => {\r\n              e.target.contentEditable = true;\r\n              e.target.focus();\r\n            }}\r\n            onBlur={e => {\r\n              this.props.escapeEdit(e, item.title);\r\n            }}\r\n            onKeyDown={e => this.props.editTask(e, item.id, item.title)}\r\n          >\r\n            {item.title}\r\n          </label>\r\n\r\n          <button\r\n            className=\"destroy\"\r\n            onClick={() => this.props.removeTask(item.id)}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const filtr = this.props.filter;\r\n    const items = this.props.items;\r\n    const filtredTasks\r\n      = filtr === \"completed\"\r\n        ? items.filter(item => item.completed)\r\n        : filtr === \"active\"\r\n        ? items.filter(item => !item.completed)\r\n        : [...items];\r\n\r\n    return <ul className=\"todo-list\">{this.list(filtredTasks)}</ul>;\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n  list = filters => {\r\n    return filters.map((filter, id) => (\r\n      <li key={id}>\r\n        <label className=\"radio\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filters\"\r\n            checked={filter === this.props.filter}\r\n            onChange={() => {\r\n              this.props.setFilter(filter);\r\n            }}\r\n          />\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </label>\r\n      </li>\r\n    ));\r\n  };\r\n  render() {\r\n    const isSelect = this.props.isSelect;\r\n    return <ul className=\"filters\">{this.list(isSelect)}</ul>;\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport TodoItems from \"./TodoItems\";\r\nimport Filters from \"./Filters\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // members of item structure\r\n      // item: {\r\n      //   id: 0,\r\n      //   title: \"\",\r\n      //   completed: false,\r\n      // }\r\n      items: [],\r\n\r\n      filter: null,\r\n      displayStyle: { display: \"block\" },\r\n      isSelect: [\"all\", \"active\", \"completed\"],\r\n    };\r\n  }\r\n\r\n  completedItems = () => {\r\n    return this.state.items.filter(item => item.completed).length;\r\n  };\r\n\r\n  leftIems = () => {\r\n    return this.state.items.length - this.completedItems();\r\n  };\r\n\r\n  addTask = e => {\r\n    const item = {};\r\n    item.title = this.refs.textInput.value;\r\n    e.preventDefault();\r\n    item.completed = false;\r\n    this.refs.textInput.value = \"\";\r\n    this.setState(prevState => {\r\n      item.id\r\n        = prevState.items.length === 0\r\n          ? 0\r\n          : prevState.items[prevState.items.length - 1].id + 1;\r\n      return { items: [...prevState.items, item] };\r\n    });\r\n  };\r\n\r\n  escapeEdit = (e, title) => {\r\n    e.target.innerText = title;\r\n    e.target.contentEditable = false;\r\n  };\r\n\r\n  editTask = (e, id, title) => {\r\n    if (e.keyCode === 13) {\r\n      const newTitle = e.target.innerText;\r\n      this.setState(prevState => {\r\n        return {\r\n          items: prevState.items.map(item => {\r\n            if (item.id === id) {\r\n              const tmp = { ...item };\r\n              tmp.title = newTitle;\r\n              return tmp;\r\n            }\r\n            return item;\r\n          }),\r\n        };\r\n      });\r\n      e.target.contentEditable = false;\r\n    }\r\n    if (e.keyCode === 27) {\r\n      this.escapeEdit(e, title);\r\n    }\r\n  };\r\n\r\n  removeTask = id => {\r\n    this.setState(prevState => {\r\n      return { items: prevState.items.filter(item => item.id !== id) };\r\n    });\r\n  };\r\n\r\n  isComplete = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.map(item => {\r\n          if (item.id === id) {\r\n            const tmp = { ...item };\r\n            tmp.completed = !item.completed;\r\n            return tmp;\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    });\r\n  };\r\n\r\n  setFilter = newFilter => {\r\n    this.setState({\r\n      filter: newFilter,\r\n    });\r\n  };\r\n\r\n  clearComplete = () => {\r\n    this.setState(prevState => {\r\n      return { items: prevState.items.filter(item => !item.completed) };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    this.setState(prevState => {\r\n      if (\r\n        prevState.items.length === 0\r\n        && prevState.displayStyle.display === \"block\"\r\n      ) {\r\n        return { displayStyle: { display: \"none\" } };\r\n      } else if (\r\n        prevState.items.length !== 0\r\n        && prevState.displayStyle.display === \"none\"\r\n      ) {\r\n        return { displayStyle: { display: \"block\" } };\r\n      }\r\n    });\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos App</h1>\r\n          <form onSubmit={this.addTask}>\r\n            <input\r\n              className=\"new-todo\"\r\n              placeholder=\"What needs to be done?\"\r\n              autoFocus=\"\"\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              ref=\"textInput\"\r\n            />\r\n          </form>\r\n        </header>\r\n        <section className=\"main\" style={this.state.displayStyle}>\r\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <TodoItems\r\n            items={this.state.items}\r\n            toggleIsComplete={this.isComplete}\r\n            removeTask={this.removeTask}\r\n            filter={this.state.filter}\r\n            completingItems={this.completingItems}\r\n            editTask={this.editTask}\r\n            escapeEdit={this.escapeEdit}\r\n          />\r\n        </section>\r\n        <footer className=\"footer\" style={this.state.displayStyle}>\r\n          <span className=\"todo-count\">\r\n            <strong>{this.leftIems()}</strong> items left\r\n          </span>\r\n\r\n          <Filters\r\n            isSelect={this.state.isSelect}\r\n            setFilter={this.setFilter}\r\n            filter={this.state.filter}\r\n          />\r\n\r\n          <button\r\n            className=\"clear-completed\"\r\n            style={this.state.displayStyle}\r\n            onClick={() => {\r\n              this.clearComplete();\r\n            }}\r\n          >\r\n            clear-completed\r\n          </button>\r\n        </footer>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}