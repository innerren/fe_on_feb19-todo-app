{"version":3,"sources":["todoitems.js","App.js","index.js"],"names":["TodoItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","ids","keys","objectSpread","textLines","filtredTasks","filter","key","toConsumableArray","viewedItems","length","countingItems","map","textLine","react_default","a","createElement","className","type","checked","onClick","toggleIsComplete","console","log","removeTask","React","Component","App","count","setState","addTask","event","task","target","value","displayStyle","display","prevState","tmp","changeDisplay","isView","newDisplay","isComplete","clearComplete","hello","bye","another task","last task","isSelect","all","active","completed","placeholder","autoFocus","autocomplete","onKeyPress","style","id","htmlFor","todoitems","href","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f9b59aa9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const ids = Object.keys({ ...this.props.textLines });\r\n    const filtredTasks =\r\n      this.props.filter === \"completed\"\r\n        ? ids.filter(key => this.props.textLines[key])\r\n        : this.props.filter === \"active\"\r\n        ? ids.filter(key => !this.props.textLines[key])\r\n        : [...ids];\r\n    if (this.props.viewedItems !== filtredTasks.length) {\r\n      this.props.countingItems(filtredTasks.length);\r\n    }\r\n\r\n    return filtredTasks.map(textLine => (\r\n      <li className=\"\">\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={this.props.textLines[textLine]}\r\n            onClick={() => this.props.toggleIsComplete(textLine)}\r\n          />\r\n          <label>{textLine}</label>\r\n          {console.log(this.props.textLines)}\r\n          {console.log(this.props.filter)}\r\n          <button\r\n            className=\"destroy\"\r\n            onClick={() => this.props.removeTask(textLine)}\r\n          />\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoItems from \"./todoitems\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textLines: {\n        hello: false,\n        bye: false,\n        \"another task\": false,\n        \"last task\": false\n      },\n      viewedItems: 0,\n      filter: null,\n      displayStyle: { display: \"block\" },\n      isSelect: {\n        all: \"selected\",\n        active: \"\",\n        completed: \"\"\n      }\n    };\n  }\n\n  countingItems = count => {\n    this.setState({\n      viewedItems: count\n    });\n  };\n\n  addTask = event => {\n    if (event.key === \"Enter\") {\n      let task = event.target.value;\n      event.target.value = \"\";\n      this.setState({ displayStyle: { display: \"block\" } });\n      this.setState(prevState => {\n        const tmp = { ...prevState.textLines };\n        tmp[task] = false;\n        return { textLines: tmp };\n      });\n    }\n  };\n\n  changeDisplay = isView => {\n    const newDisplay = isView ? { display: \"none\" } : { display: \"block\" };\n    console.log(newDisplay);\n    this.setState({ displayStyle: newDisplay });\n  };\n\n  removeTask = key => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      delete tmp[key];\n      return { textLines: tmp };\n    });\n  };\n\n  isComplete = key => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      tmp[key] = !prevState.textLines[key];\n      return { textLines: tmp };\n    });\n  };\n  clearComplete = () => {\n    this.setState(prevState => {\n      const tmp = { ...prevState.textLines };\n      for (let key in tmp) {\n        if (tmp[key]) {\n          delete tmp[key];\n        }\n      }\n      return { textLines: tmp };\n    });\n  };\n\n  render() {\n    if (this.state.displayStyle.display === \"block\") {\n      if (Object.keys(this.state.textLines).length === 0) {\n        this.setState({ displayStyle: { display: \"none\" } });\n      }\n    }\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus=\"\"\n            autocomplete=\"off\"\n            onKeyPress={this.addTask}\n          />\n        </header>\n        <section className=\"main\" style={this.state.displayStyle}>\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            <TodoItems\n              textLines={this.state.textLines}\n              toggleIsComplete={this.isComplete}\n              removeTask={this.removeTask}\n              filter={this.state.filter}\n              countingItems={this.countingItems}\n              viewedItems={this.state.viewedItems}\n            />\n          </ul>\n        </section>\n        <footer className=\"footer\" style={this.state.displayStyle}>\n          <span className=\"todo-count\">\n            <strong>{this.state.viewedItems}</strong> items left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={this.state.isSelect.all}\n                onClick={() => {\n                  this.setState({\n                    filter: null,\n                    isSelect: {\n                      all: \"selected\",\n                      active: \"\",\n                      completed: \"\"\n                    }\n                  });\n                }}\n              >\n                All\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"#/active\"\n                className={this.state.isSelect.active}\n                onClick={() => {\n                  this.setState({\n                    filter: \"active\",\n                    isSelect: {\n                      all: \"\",\n                      active: \"selected\",\n                      completed: \"\"\n                    }\n                  });\n                }}\n              >\n                Active\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"#/completed\"\n                className={this.state.isSelect.completed}\n                onClick={() => {\n                  this.setState({\n                    filter: \"completed\",\n                    isSelect: {\n                      all: \"\",\n                      active: \"\",\n                      completed: \"selected\"\n                    }\n                  });\n                }}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n          <button\n            className=\"clear-completed\"\n            style={this.state.displayStyle}\n            onClick={() => {\n              this.clearComplete();\n            }}\n          >\n            clear-completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\n"],"sourceRoot":""}